Description: >
  Yemitan Rotimi / Cloud devops nanodegree capstone project

Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String

Resources:
  S3CodeBucketCopyRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Path: /

  RootInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: "Udagram"
      Path: /
      Roles:
        - !Ref S3CodeBucketCopyRole

  S3CodeBucketCopyPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: S3CodeBucketCopyPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: "s3:*"
            Resource: "*"
      Roles:
        - !Ref S3CodeBucketCopyRole

  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow http to Load balancer"
      VpcId:
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
      SecurityGroupEgress:
        CidrIp: "0.0.0.0/0"
        IpProtocol: "tcp"
        FromPort: 80
        ToPort: 80
      SecurityGroupIngress:
        CidrIp: "0.0.0.0/0"
        IpProtocol: "tcp"
        FromPort: 80
        ToPort: 80

  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow http and ssh to server"
      VpcId:
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - CidrIp: "0.0.0.0/0"
          IpProtocol: "tcp"
          FromPort: 80
          ToPort: 80
        - CidrIp: "0.0.0.0/0"
          IpProtocol: "tcp"
          FromPort: 22
          ToPort: 22

  WebServerLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      BlockDeviceMappings:
        - DeviceName: "/dev/sdh"
          Ebs:
            VolumeSize: "10"
      IamInstanceProfile: !Ref RootInstanceProfile
      ImageId: ami-06d51e91cea0dac8d
      KeyName: "Bastion"
      InstanceType: t2.medium
      SecurityGroups:
        - Ref: WebServerSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo su
          apt-get update -y
          apt-get install unzip awscli -y
          apt-get install apache2 -y
          systemctl start apache2.service
          cd /var/www/html
          aws s3 cp s3://udacity-rotimi-demo-1/udacity-starter-website.zip .
          unzip -o udacity-starter-website.zip

  WebAppAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: String
      HealthCheckGracePeriod: 3
      LaunchConfigurationName:
        Ref: WebServerLaunchConfiguration
      MaxSize: "2"
      MinSize: "2"
      TargetGroupARNs:
        - Ref: WebAppTargetGroup
      VPCZoneIdentifier:
        - Fn::ImportValue: !Sub "${EnvironmentName}-PRI-SUBNETS"

  WebAppLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      SecurityGroups:
        - Ref: LoadBalancerSecurityGroup
      Subnets:
        - Fn::ImportValue: !Sub ${EnvironmentName}-PUB1-SUBNETS
        - Fn::ImportValue: !Sub ${EnvironmentName}-PUB2-SUBNETS

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: WebAppTargetGroup
      LoadBalancerArn:
        Ref: WebAppLoadBalancer
      Port: "80"
      Protocol: HTTP

  ALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref "WebAppTargetGroup"
      Conditions:
        - Field: path-pattern
          Values: [/]
      ListenerArn: !Ref "Listener"
      Priority: 1

  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 15
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 5
      Protocol: HTTP
      Port: 80
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue:
          Fn::Sub: "${EnvironmentName}-VPCID"

Outputs:
  WebAppLoadBalancer:
    Description: A reference to LoadBalancer DNS name
    Value: !Join
      - ""
      - - "http://"
        - !GetAtt WebAppLoadBalancer.DNSName

    Export:
      Name: !Sub ${EnvironmentName}-LoadBalancer-DNS
